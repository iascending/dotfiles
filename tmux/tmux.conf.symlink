#######################
# ***    PLUGINS   *** #
########################
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'laktak/extrakto'

########################
# ***    DISPLAY   *** #
########################

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Set tmux to display in 256 colors
set -g default-terminal "screen-256color"

# Set border colors
set-option -g pane-border-style 'fg=#343D46,bg=colour0'
set-option -g pane-active-border-style 'fg=colour3,bg=colour0'

# Set status line message style
set -g message-style "fg=colour5,bg=default"

# Set mode style (including history bar)
set -g mode-style "fg=colour3"

 # Set clock mode colour
setw -g clock-mode-colour red

########################
# ***    GENERAL   *** #
########################

# Set the default prefix key combination
# and unbind C-b to free it up
set -g prefix Home
unbind C-b
# use send-prefix to pass new prefix through to application
bind Home send-prefix

# Start windows numbering at 1
set -g base-index 1

# Start pane numbering at 1
setw -g pane-base-index 2

# Re-draw status window every 10 seconds
set -g status-interval 10

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# shorten command delay
set -sg escape-time 0

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# enable scroll with mouse
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "tmux.conf reloaded"

# Bind <prefix>- to split window horizontally
bind - split-window -v -c "#{pane_current_path}"
# Bind <prefix>| to split window vertically
bind \\ split-window -h -c "#{pane_current_path}"
# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5
bind g resize-pane -Z
bind = select-layout even-horizontal

# vim-tmux-navigator mapping
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" 'send-keys Home h' 'select-pane -L'
bind-key j if-shell "$is_vim" 'send-keys Home j' 'select-pane -D'
bind-key k if-shell "$is_vim" 'send-keys Home k' 'select-pane -U'
bind-key l if-shell "$is_vim" 'send-keys Home l' 'select-pane -R'

## set tmux vi mode
set-option -g mode-keys vi
bind-key -T copy-mode-vi 'H' send-keys '^'
bind-key -T copy-mode-vi 'L' send-keys '$'
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel

set -g @extrakto_split_size "15"
set -g @extrakto_split_direction "v"

#########################
# ***  STATUS BAR   *** #
#########################

## Enable status bar
set-option -g status on
set -g status-position top
## Set window list to center
set -g status-justify centre
## Set default bg/fg settings for status bar
set-option -g status-style bright,bg='#1B2B34',fg=default

set-option -g -w  window-status-current-format ''
set-option -g -w  window-status-current-style fg=colour114,bg=default,bright

## Configure CPU plugin colors for statusline
set -g @cpu_low_fg_color "#[fg=green]"
set -g @cpu_medium_fg_color "#[fg=yellow]"
set -g @cpu_high_fg_color "#[fg=red]"

set -g @cpu_low_bg_color "#[bg=default]"
set -g @cpu_medium_bg_color "#[bg=default]"
set -g @cpu_high_bg_color "#[bg=default]"

## Left Status Bar: [CPU Usage]
set -g status-left-length 85
set -g status-left "#[fg=colour232,bg=colour154] #{cpu_percentage} #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]"

## Right Status Bar: [Time][Date][Session Name]
set -g status-right "#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] %l:%M %p #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] %d %b %Y #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour154] #S #[fg=blue]"

## Auto-hide status bar if pane is maximized
set-hook -g 'after-resize-pane'  'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_zoomed_flag} -gt 1 ]; then tmux set status off; else tmux set status on; fi"'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

#########################
# ***   SHORTCUTS   *** #
#########################

# prefix + :new                            # run commands from tmux terminal
# tmux ls                                  # run command from local terminal
# tmux list-keys                           # list tmux key mappings
# tmux list-commands                       # list tmux commands
# tmux                                     # create a new tmux session
# tmux new                                 # create a new tmux session
# tmux new-session                         # create a new tmux session
# tmux new-session -s session_name         # create a session with name
# prefix + :new                            # create a new tmux session
# prefix+d                                 # return to local terminal from tmux session, everything is running in background
# exit                                     # return to local terminal from tmux session, session ends if it is the only window
# tmux list-sessions                       # list sessions
# tmux rename -t old_name new_name         # rename a session
# tmux rename-session -t old_name new_name # rename a session
# tmux renamew -t old_name new_name        # rename a window
# tmux rename-window -t old_name new_name  # rename a window
# prefix+$                                 # rename current session
# tmux kill-server                         # kill all sessions
# tmux kill-session -t session_name        # kill session with name
# tmux attach-session -t session_name      # attach session of name
# prefix + s                               # select a session to attach
# prefix + (                               # attach to previsous session
# prefix + )                               # attach to next session
# prefix + t                               # show clock
# prefix + c                               # create a window
# prefix + &                               # kill current window
# prefix + n                               # change to next window
# prefix + }                               # swap current pane with next pane
# prefix + z                               # maximize current pane
# prefix + x                               # kill current pane
# prefix + ~                               # show tmux message
# prefix + [                               # enter copy mode
# prefix + ]                               # exit copy mode
# v                                        # start selecton
# y                                        # copy selection
# Enter                                    # return to normal mode
# prefix + right_option + u                # uninstall plugin
# prefix + tab                             # extrakto completion with screen text
